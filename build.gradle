plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "org.sonarqube" version "4.4.1.3373"
}

group = 'peer'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = "11"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // logback except
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'org.springframework.boot', module: 'logback-classic'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'


    // Swagger
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'

    // Security
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5' // peer 비밀번호 안전하게 저장

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    //Oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // redis
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.4.10'

    //tika
    implementation group: 'org.apache.tika', name: 'tika-core', version: '1.24'

    // batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // mongo
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // excel
    implementation 'org.apache.poi:poi:5.2.2'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'

    // socket
    implementation 'com.corundumstudio.socketio:netty-socketio:2.0.3'

    // json createdAt
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.15.3'

    // prepersistence
    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
    // 사용 가능한 최신 버전 사용
    }

tasks.named('test') {
    useJUnitPlatform()
}

task copyGitSubmodule(type: Copy) {
    copy {
        from './private-resources'
        include "**/**"
        into 'src/main/resources'
    }
}

sonar {
    properties {
        property "sonar.projectKey", "peer-42seoul_Peer-Backend"
        property "sonar.organization", "peer-community-development-community"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.scanner.force-deprecated-java-version", "true"
    }
}
